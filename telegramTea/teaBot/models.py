from django.db import models


class Users(models.Model):
    name = models.PositiveIntegerField('id_–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', unique=True)
    nickname = models.CharField('–∏–º–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', max_length=100)
    mobile = models.CharField('–¢–µ–ª–µ—Ñ–æ–Ω', max_length=11, blank=True, null=True)
    address = models.TextField('–ê–¥—Ä–µ—Å', blank=True, null=True)
    delivery = models.CharField('–¢–∏–ø –¥–æ—Å—Ç–∞–≤–∫–∏', max_length=15, default='üöó –ü—Ä–∏–≤–µ–∑—Ç–∏')
    status = models.CharField(max_length=1, default='1')

    def __str__(self):
        return '{}'.format(self.nickname)

    class Meta:
        verbose_name = '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏'
        verbose_name_plural = '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏'


class Orders(models.Model):
    number_order = models.PositiveIntegerField('‚Ññ –ó–∞–∫–∞–∑–∞', unique=True,primary_key=True)
    user_order = models.TextField('–ó–∞–∫–∞–∑ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –µ–≥–æ –¥–∞–Ω–Ω—ã–º–∏')


class Basket(models.Model):
    count = models.PositiveSmallIntegerField('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ')
    baskUser = models.ForeignKey(Users, models.CASCADE, verbose_name='–ü—Ä–æ–¥—É–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
    name_product = models.CharField('–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞', max_length=250, db_index=True)
    price = models.DecimalField('–¶–µ–Ω–∞', max_digits=8, decimal_places=0, default=0)

    def __str__(self):
        return self.name_product

    class Meta:
        verbose_name = '–ö–æ—Ä–∑–∏–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'
        verbose_name_plural = '–ö–æ—Ä–∑–∏–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π'


class CategoryOne(models.Model):
    name = models.CharField('–†–∞–∑–¥–µ–ª—ã —á–∞—è', max_length=250)

    def __str__(self):
        return self.name

    class Meta:
        verbose_name = '–ü–µ—Ä–≤–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è'
        verbose_name_plural = '–ü–µ—Ä–≤–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è'


class AllMenu(models.Model):
    name = models.CharField('–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞', max_length=250, unique=True)
    photo = models.URLField('URL —Ñ–æ—Ç–æ –ø—Ä–æ–¥—É–∫—Ç–∞', blank=True, null=True)
    weight = models.DecimalField('–í–µ—Å –≤ –≥—Ä.', max_digits=7, decimal_places=0)
    volume = models.PositiveSmallIntegerField('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —à—Ç.', default=1)
    price = models.DecimalField('–¶–µ–Ω–∞', max_digits=8, decimal_places=0, default=0)
    category_one = models.ForeignKey(CategoryOne, models.CASCADE, verbose_name='–ö–∞—Ç–µ–≥–æ—Ä–∏—è-1')

    def __str__(self):
        return self.name

    class Meta:
        verbose_name = '–í—Å–µ —Ç–∏–ø—ã —á–∞—è'
        verbose_name_plural = '–í—Å–µ —Ç–∏–ø—ã —á–∞—è'
